// <auto-generated />
using System;
using API_ANSPRICING;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API_ANSPRICING.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200818120617_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("API_ANSPRICING.Models.Station", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("shopCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("stationID")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("stations");
                });

            modelBuilder.Entity("API_ANSPRICING.Models.Tag", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("QrCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("StationId")
                        .HasColumnType("char(36)");

                    b.Property<string>("coutry")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("description1")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("description2")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("description3")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("description4")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("description5")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("description6")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("imgSource")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("manufacturer")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("oldPrice")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("price")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("tagId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("StationId");

                    b.ToTable("tags");
                });

            modelBuilder.Entity("API_ANSPRICING.Models.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("API_ANSPRICING.Models.Tag", b =>
                {
                    b.HasOne("API_ANSPRICING.Models.Station", "station")
                        .WithMany()
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
